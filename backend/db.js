// √émbunƒÉtƒÉ»õire db.js cu monitorizare
const mongoose = require('mongoose');
require('dotenv').config();

// Monitorizare evenimente MongoDB
mongoose.connection.on('connected', () => {
    console.log('üü¢ MongoDB: Conexiune stabilitƒÉ');
});

mongoose.connection.on('error', (err) => {
    console.error('üî¥ MongoDB: Eroare conexiune', err);
});

mongoose.connection.on('disconnected', () => {
    console.log('üü† MongoDB: Conexiune √ÆnchisƒÉ');
});

// √énchide conexiunea la √Ænchiderea aplica»õiei
process.on('SIGINT', async () => {
    await mongoose.connection.close();
    console.log('üîå MongoDB: Conexiune √ÆnchisƒÉ prin SIGINT');
    process.exit(0);
});

// Configurare op»õiuni conexiune pentru performan»õƒÉ »ôi robuste»õe
const connectDB = async () => {
    try {
        await mongoose.connect(process.env.MONGODB_URI, {
            // Aceste op»õiuni sunt pentru versiuni mai vechi de Mongoose
            // √én versiunile noi sunt activate implicit
            useNewUrlParser: true,
            useUnifiedTopology: true,
            // Aceste op»õiuni controleazƒÉ retries »ôi timeouts
            serverSelectionTimeoutMS: 5000,
            socketTimeoutMS: 45000,
        });

        console.log('‚úÖ Conexiune MongoDB realizatƒÉ.');

        // Debug mode pentru dezvoltare - vezi toate query-urile
        if (process.env.NODE_ENV === 'development') {
            mongoose.set('debug', true);
        }

    } catch (error) {
        console.error('‚ùå Eroare conexiune MongoDB:', error.message);
        process.exit(1);
    }
};

module.exports = connectDB;